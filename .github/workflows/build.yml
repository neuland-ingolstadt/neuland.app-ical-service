name: Build and Deploy Docker Image

on:
  push:
    branches: [ 'main' ]
    paths:
      - ".github/workflows/build.yml"
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "flake.nix"
      - "flake.lock"

env:
  REGISTRY: ghcr.io

jobs:
  cargo-check:
    name: Cargo Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
            ~/.rustup
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-clippy-${{ hashFiles('src/**') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-clippy-
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-
      
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-22.04
    needs: cargo-check
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Fix Nix Store Permissions
        run: |
          sudo mkdir -p /nix
          sudo chown -R runner:runner /nix

      - name: Cache Nix Store
        uses: actions/cache@v4
        with:
          path: |
            /nix/store
            /nix/var/nix/db
            /nix/var/nix/gcroots
            /nix/var/nix/profiles
            /nix/var/nix/temproots
          key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-

      - name: Build Docker image
        run: nix build ".#dockerImage" --out-link result

      - id: repository
        name: Generate Registry String
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ env.REGISTRY}}/${{ github.repository }}

      - name: Push Docker image to GHCR
        run: |
          echo "Pushing to ${{ steps.repository.outputs.lowercase }}:latest"
          skopeo copy --dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} docker-archive:./result docker://${{ steps.repository.outputs.lowercase }}:latest
          echo "Pushing to ${{ steps.repository.outputs.lowercase }}:build-${{ github.run_number }}"
          skopeo copy --dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} docker-archive:./result docker://${{ steps.repository.outputs.lowercase }}:build-${{ github.run_number }}
