{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "name": "deprecated"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "The URL that specifies the behavior of this scalar.",
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Exposes a URL that specifies the behavior of this scalar.",
          "locations": [
            "SCALAR"
          ],
          "name": "specifiedBy"
        },
        {
          "args": [],
          "description": "Indicates exactly one field must be supplied and this field must not be `null`.",
          "locations": [
            "INPUT_OBJECT"
          ],
          "name": "oneOf"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "Enum representing the original language of a meal.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "German language code",
              "isDeprecated": false,
              "name": "de"
            },
            {
              "deprecationReason": null,
              "description": "English language code",
              "isDeprecated": false,
              "name": "en"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "OriginalLanguage",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the kind of user. This is used to target announcements to specific user groups.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Student",
              "isDeprecated": false,
              "name": "STUDENT"
            },
            {
              "deprecationReason": null,
              "description": "Employee",
              "isDeprecated": false,
              "name": "EMPLOYEE"
            },
            {
              "deprecationReason": null,
              "description": "Guest",
              "isDeprecated": false,
              "name": "GUEST"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "UserKind",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the platform of the user. This is used to target announcements to specific user groups.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Android",
              "isDeprecated": false,
              "name": "ANDROID"
            },
            {
              "deprecationReason": null,
              "description": "iOS",
              "isDeprecated": false,
              "name": "IOS"
            },
            {
              "deprecationReason": null,
              "description": "Web",
              "isDeprecated": false,
              "name": "WEB"
            },
            {
              "deprecationReason": null,
              "description": "Web Development Version",
              "isDeprecated": false,
              "name": "WEB_DEV"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "Platform",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the different room report categories. This is used to categorize the reason for the report.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "WRONG_DESCRIPTION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "WRONG_LOCATION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NOT_EXISTING"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "MISSING"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OTHER"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "RoomReportCategory",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the different sports categories. This is used to categorize the sports events.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Basketball"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Soccer"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Calisthenics"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Dancing"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "StrengthTraining"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Running"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Jogging"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Handball"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Frisbee"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Volleyball"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Spikeball"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FullBodyWorkout"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Defense"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Yoga"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Meditation"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Tennis"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Badminton"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Swimming"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Waterpolo"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Cycling"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Climbing"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Boxing"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Kickboxing"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "MartialArts"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "TableTennis"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Rowing"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Baseball"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Skateboarding"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Parkour"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Hiking"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Hockey"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Other"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "SportsCategoryType",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the different locations of THI. This is used to categorize the sports events.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Ingolstadt"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Neuburg"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "CampusType",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the different weekdays. This is used to categorize the sports events.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Monday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Tuesday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Wednesday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Thursday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Friday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Saturday"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "Sunday"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "WeekdayType",
          "possibleTypes": null
        },
        {
          "description": "Enum representing the different restaurant locations. This is used as a parameter for the food query.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Ingolstadt Mensa",
              "isDeprecated": false,
              "name": "IngolstadtMensa"
            },
            {
              "deprecationReason": null,
              "description": "Neuburg Mensa",
              "isDeprecated": false,
              "name": "NeuburgMensa"
            },
            {
              "deprecationReason": null,
              "description": "Reimanns",
              "isDeprecated": false,
              "name": "Reimanns"
            },
            {
              "deprecationReason": null,
              "description": "Canisius",
              "isDeprecated": false,
              "name": "Canisius"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "RestaurantLocation",
          "possibleTypes": null
        },
        {
          "description": "A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "DateTime",
          "possibleTypes": null
        },
        {
          "description": "A local time string (i.e., with no associated timezone) in 24-hr `HH:mm[:ss[.SSS]]` format, e.g. `14:25` or `14:25:06` or `14:25:06.123`.  This scalar is very similar to the `LocalTime`, with the only difference being that `LocalEndTime` also allows `24:00` as a valid value to indicate midnight of the following day.  This is useful when using the scalar to represent the exclusive upper bound of a time block.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "LocalEndTime",
          "possibleTypes": null
        },
        {
          "description": "A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "EmailAddress",
          "possibleTypes": null
        },
        {
          "description": "A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "URL",
          "possibleTypes": null
        },
        {
          "description": "Custom food input scalar type for handling both enum values and strings. This is used for the migration of the food query to the new schema.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "LocationInput",
          "possibleTypes": null
        },
        {
          "description": "Meal data",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the meal in different languages",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the meal on the specific day",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the meal, independent of the day",
              "isDeprecated": false,
              "name": "mealId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Category of the meal (main, soup or salad)",
              "isDeprecated": false,
              "name": "category",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Prices for different types of customers (student, employee, guest)",
              "isDeprecated": false,
              "name": "prices",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Prices",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of allergens (e.g. gluten, lactose, etc.)",
              "isDeprecated": false,
              "name": "allergens",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of flags (e.g. vegan, vegetarian, etc.)",
              "isDeprecated": false,
              "name": "flags",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Nutritional values for the meal",
              "isDeprecated": false,
              "name": "nutrition",
              "type": {
                "kind": "OBJECT",
                "name": "Nutrition",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Variants or toppings of the meal, like bread, sauce, etc.",
              "isDeprecated": false,
              "name": "variants",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Variation",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Original language of the meal name",
              "isDeprecated": false,
              "name": "originalLanguage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OriginalLanguage",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Static meals are always available, non-static meals are only available on specific days",
              "isDeprecated": false,
              "name": "static",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Restaurant where the meal is available (IngolstadtMensa, NeuburgMensa, Reimanns, Canisius)",
              "isDeprecated": false,
              "name": "restaurant",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Meal",
          "possibleTypes": null
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": null
        },
        {
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null
        },
        {
          "description": "Variants of a meal",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the variant in different languages",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "True if the variant is an additional topping and not a variant of the meal",
              "isDeprecated": false,
              "name": "additional",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Prices for different types of customers (student, employee, guest)",
              "isDeprecated": false,
              "name": "prices",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Prices",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the variant",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the meal, independent of the day",
              "isDeprecated": false,
              "name": "mealId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of allergens (e.g. gluten, lactose, etc.)",
              "isDeprecated": false,
              "name": "allergens",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of flags (e.g. vegan, vegetarian, etc.)",
              "isDeprecated": false,
              "name": "flags",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Nutritional values for the variant",
              "isDeprecated": false,
              "name": "nutrition",
              "type": {
                "kind": "OBJECT",
                "name": "Nutrition",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Original language of the variant name",
              "isDeprecated": false,
              "name": "originalLanguage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OriginalLanguage",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Static variants are always available, non-static variants are only available on specific days",
              "isDeprecated": false,
              "name": "static",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Restaurant where the variant is available (IngolstadtMensa, NeuburgMensa, Reimanns, Canisius)",
              "isDeprecated": false,
              "name": "restaurant",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Parent meal for a variant meal",
              "isDeprecated": false,
              "name": "parent",
              "type": {
                "kind": "OBJECT",
                "name": "Parent",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Variation",
          "possibleTypes": null
        },
        {
          "description": "Nutritional values for a meal. Currently only available at Mensa. Values are per average portion.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Energy in kilojoules",
              "isDeprecated": false,
              "name": "kj",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Energy in kilocalories",
              "isDeprecated": false,
              "name": "kcal",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Fat in grams",
              "isDeprecated": false,
              "name": "fat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Saturated fat in grams",
              "isDeprecated": false,
              "name": "fatSaturated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Carbohydrates in grams",
              "isDeprecated": false,
              "name": "carbs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Sugar in grams",
              "isDeprecated": false,
              "name": "sugar",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Fiber in grams",
              "isDeprecated": false,
              "name": "fiber",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Protein in grams",
              "isDeprecated": false,
              "name": "protein",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Salt in grams",
              "isDeprecated": false,
              "name": "salt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Nutrition",
          "possibleTypes": null
        },
        {
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": null
        },
        {
          "description": "Prices for different types of customers",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Price for students",
              "isDeprecated": false,
              "name": "student",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Price for employees",
              "isDeprecated": false,
              "name": "employee",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Price for guests",
              "isDeprecated": false,
              "name": "guest",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Prices",
          "possibleTypes": null
        },
        {
          "description": "Provides a list of meals for a specific day",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Date of the meal list",
              "isDeprecated": false,
              "name": "timestamp",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of meals",
              "isDeprecated": false,
              "name": "meals",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Meal",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Food",
          "possibleTypes": null
        },
        {
          "description": "Error message for the food query",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Location of the restaurant",
              "isDeprecated": false,
              "name": "location",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Error message",
              "isDeprecated": false,
              "name": "message",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "FoodError",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "List of meal days",
              "isDeprecated": false,
              "name": "foodData",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Food",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Error message for the food query",
              "isDeprecated": false,
              "name": "errors",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FoodError",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "FoodResponse",
          "possibleTypes": null
        },
        {
          "description": "Parent meal for a variant meal",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the parent meal",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Category of the parent meal (main, soup or salad)",
              "isDeprecated": false,
              "name": "category",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the parent meal in different languages",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Parent",
          "possibleTypes": null
        },
        {
          "description": "Campus Life Event data type. Information about a specific event on campus.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the event",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": "Use host field instead",
              "description": "Organizer of the event",
              "isDeprecated": true,
              "name": "organizer",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Host of the event",
              "isDeprecated": false,
              "name": "host",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Host",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": "Use titles field instead. This field will be removed in the future.",
              "description": "Title of the event in German",
              "isDeprecated": true,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Title of the event in different languages",
              "isDeprecated": false,
              "name": "titles",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": "Use start field instead with DateTime type",
              "description": "Begin of the event",
              "isDeprecated": true,
              "name": "begin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Start of the event",
              "isDeprecated": false,
              "name": "startDateTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": "Use end field instead with DateTime type",
              "description": "End of the event",
              "isDeprecated": true,
              "name": "end",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "End of the event",
              "isDeprecated": false,
              "name": "endDateTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Location of the event (only available if it's eligible for external sharing)",
              "isDeprecated": false,
              "name": "location",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": "Use descriptions field instead. This field will be removed in the future.",
              "description": "Description of the event (only available if it's eligible for external sharing)",
              "isDeprecated": true,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Description of the event in different languages (only available if it's eligible for external sharing)",
              "isDeprecated": false,
              "name": "descriptions",
              "type": {
                "kind": "OBJECT",
                "name": "MultiLanguageString",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URL to the event website",
              "isDeprecated": false,
              "name": "eventUrl",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Boolean if the event is scraped from the moodle calendar or not.",
              "isDeprecated": false,
              "name": "isMoodleEvent",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ClEvent",
          "possibleTypes": null
        },
        {
          "description": "Host of the event, usually a club or student group.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Name of the event host",
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URL to the event host website",
              "isDeprecated": false,
              "name": "website",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Instagram URL of the event host",
              "isDeprecated": false,
              "name": "instagram",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Host",
          "possibleTypes": null
        },
        {
          "description": "Announcement data to display on top of the apps dashboard",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the announcement",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Platform where the announcement is displayed",
              "isDeprecated": false,
              "name": "platform",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Platform",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "UserKind to target the announcement to specific user groups",
              "isDeprecated": false,
              "name": "userKind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "UserKind",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Title of the announcement in different languages",
              "isDeprecated": false,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Description of the announcement in different languages",
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Start date and time when the announcement is displayed",
              "isDeprecated": false,
              "name": "startDateTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "End date and time when the announcement is displayed",
              "isDeprecated": false,
              "name": "endDateTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Priority of the announcement, higher are more important",
              "isDeprecated": false,
              "name": "priority",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URL to the announcement",
              "isDeprecated": false,
              "name": "url",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Image URL for the announcement",
              "isDeprecated": false,
              "name": "imageUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Creation date of the announcement",
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Last update date of the announcement",
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Announcement",
          "possibleTypes": null
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": null
        },
        {
          "description": "String in multiple languages (German and English)",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "German language code",
              "isDeprecated": false,
              "name": "de",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "English language code",
              "isDeprecated": false,
              "name": "en",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MultiLanguageString",
          "possibleTypes": null
        },
        {
          "description": "University sports event. Represents a sports event from the university sports program.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the sports event",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Title of the sports event in different languages",
              "isDeprecated": false,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Description of the sports event in different languages",
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "OBJECT",
                "name": "MultiLanguageString",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Campus where the sports event belongs to. This is not the location of the event itself.",
              "isDeprecated": false,
              "name": "campus",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CampusType",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Location of the sports event",
              "isDeprecated": false,
              "name": "location",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Weekday of the sports event",
              "isDeprecated": false,
              "name": "weekday",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "WeekdayType",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Start time of the sports event",
              "isDeprecated": false,
              "name": "startTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "LocalEndTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "End time of the sports event",
              "isDeprecated": false,
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "LocalEndTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "True if the sports event requires registration",
              "isDeprecated": false,
              "name": "requiresRegistration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Invitation link for the sports event, e.g. a WhatsApp group",
              "isDeprecated": false,
              "name": "invitationLink",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "E-Mail address for registration or contact",
              "isDeprecated": false,
              "name": "eMail",
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Category of the sports event (e.g. soccer, basketball, etc.)",
              "isDeprecated": false,
              "name": "sportsCategory",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SportsCategoryType",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Creation date of the sports event",
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Last update date of the sports event",
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UniversitySports",
          "possibleTypes": null
        },
        {
          "description": "Get all room reports. Contains user reports of wrong room data.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the report",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Room name",
              "isDeprecated": false,
              "name": "room",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reason for the report. This is a enum wiht report categories.",
              "isDeprecated": false,
              "name": "reason",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "RoomReportCategory",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "description of the report",
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Creation date of the report",
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Resolved date of the report or null if not resolved",
              "isDeprecated": false,
              "name": "resolvedAt",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "RoomReport",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertResponse",
          "possibleTypes": null
        },
        {
          "description": "Events by Neuland Ingolstadt e.V.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Unique identifier of the event",
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Title of the event in different languages",
              "isDeprecated": false,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MultiLanguageString",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Description of the event in different languages",
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "OBJECT",
                "name": "MultiLanguageString",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Location where the event takes place",
              "isDeprecated": false,
              "name": "location",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Creation date and time of the event",
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Last update date and time of the event",
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Start date and time of the event",
              "isDeprecated": false,
              "name": "startTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "End date and time of the event",
              "isDeprecated": false,
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Recurrence rule for recurring events (uses iCalendar RRULE format)",
              "isDeprecated": false,
              "name": "rrule",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "NeulandEvent",
          "possibleTypes": null
        },
        {
          "description": "Room report input type. Used to create a new report about incorrect room data.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Room name",
              "name": "room",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Reason for the report.",
              "name": "reason",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "RoomReportCategory",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "description of the report",
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "RoomReportInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for the multi language string.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "en",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "de",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MultiLanguageStringInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for the university sports event.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Title of the sports event in different languages",
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MultiLanguageStringInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Description of the sports event in different languages",
              "name": "description",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MultiLanguageStringInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Campus where the sports event belongs to. This is not the location of the event itself.",
              "name": "campus",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "CampusType",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Location of the sports event",
              "name": "location",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Weekday of the sports event",
              "name": "weekday",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "WeekdayType",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Start time of the sports event as Unix timestamp",
              "name": "startTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "LocalEndTime",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "End time of the sports event as Unix timestamp",
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "LocalEndTime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "True if the sports event requires registration",
              "name": "requiresRegistration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Invitation link for the sports event, e.g. a WhatsApp group",
              "name": "invitationLink",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "E-Mail address for registration or contact",
              "name": "eMail",
              "type": {
                "kind": "SCALAR",
                "name": "EmailAddress",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Category of the sports event (e.g. soccer, basketball, etc.)",
              "name": "sportsCategory",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SportsCategoryType",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UniversitySportsInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for the announcement.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Platform where the announcement is displayed",
              "name": "platform",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Platform",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "UserKind to target the announcement to specific user groups",
              "name": "userKind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "UserKind",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Title of the announcement in different languages",
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MultiLanguageStringInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Description of the announcement in different languages",
              "name": "description",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MultiLanguageStringInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Start date and time when the announcement is displayed",
              "name": "startDateTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "End date and time when the announcement is displayed",
              "name": "endDateTime",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Priority of the announcement, higher are more important",
              "name": "priority",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "URL to the announcement",
              "name": "url",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Image URL for the announcement",
              "name": "imageUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AnnouncementInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for the manual campus life event. These events are created by the administrators and are not fetched from an external source.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Host / organizer of the event",
              "name": "host",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "HostInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Title of the event in different languages",
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MultiLanguageStringInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Description of the event in different languages",
              "name": "description",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MultiLanguageStringInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Begin date and time of the event",
              "name": "begin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "End date and time of the event",
              "name": "end",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Location of the event",
              "name": "location",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Website of the event",
              "name": "website",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "ManualCampusLifeEventInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for the host of an event.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Name of the event host",
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "URL to the event host website",
              "name": "website",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Instagram URL of the event host",
              "name": "instagram",
              "type": {
                "kind": "SCALAR",
                "name": "URL",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "HostInput",
          "possibleTypes": null
        },
        {
          "description": "Input type for a event by Neuland Ingolstadt e.V.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Title of the event in different languages",
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MultiLanguageStringInput",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Description of the event in different languages",
              "name": "description",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MultiLanguageStringInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Location where the event takes place",
              "name": "location",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Start date and time of the event",
              "name": "startTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "End date and time of the event",
              "name": "endTime",
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Recurrence rule for recurring events (uses iCalendar RRULE format)",
              "name": "rrule",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "NeulandEventInput",
          "possibleTypes": null
        },
        {
          "description": "Root query",
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "locations",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "LocationInput",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get the meal plan for a specific restaurant.",
              "isDeprecated": false,
              "name": "food",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FoodResponse",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get the campus life events",
              "isDeprecated": false,
              "name": "clEvents",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ClEvent",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all campus life clubs",
              "isDeprecated": false,
              "name": "clClubs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Host",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": "Use appAnnouncements query instead",
              "description": "Get the current announcements",
              "isDeprecated": true,
              "name": "announcements",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Announcement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "active",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Get the current in app announcements.",
              "isDeprecated": false,
              "name": "appAnnouncements",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Announcement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get the university sports events. This includes all sports events from all campuses.",
              "isDeprecated": false,
              "name": "universitySports",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "UniversitySports",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get the room reports. Note: This query is only available for authenticated users.",
              "isDeprecated": false,
              "name": "roomReports",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "RoomReport",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Get all events by Neuland Ingolstadt e.V.",
              "isDeprecated": false,
              "name": "neulandEvents",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "NeulandEvent",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null
        },
        {
          "description": "Mutation type to update data.",
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UniversitySportsInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Create or update a university sports event. If an ID is provided, the event is updated, otherwise a new event is created. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "upsertUniversitySport",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete a university sports event by ID. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "deleteUniversitySport",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AnnouncementInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Create or update an announcement. If an ID is provided, the announcement is updated, otherwise a new announcement is created. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "upsertAppAnnouncement",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete an announcement by ID. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "deleteAppAnnouncement",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "RoomReportInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Create a new room report.",
              "isDeprecated": false,
              "name": "createRoomReport",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "resolved",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Resolve a room report by ID. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "resolveRoomReport",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ManualCampusLifeEventInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Create or update a manual campus life event. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "upsertManualClEvent",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete a manual campus life event by ID. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "deleteManualClEvent",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "NeulandEventInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Create or update a Neuland event. If an ID is provided, the event is updated, otherwise a new event is created. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "upsertNeulandEvent",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertResponse",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Delete a Neuland event by ID. Note: This mutation is only available for authenticated users.",
              "isDeprecated": false,
              "name": "deleteNeulandEvent",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": null
        },
        {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null
        },
        {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "specifiedByURL",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isOneOf",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null
        },
        {
          "description": "An enum describing what kind of type a given `__Type` is.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "LIST"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null
        },
        {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null
        },
        {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null
        },
        {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null
        },
        {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isRepeatable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null
        },
        {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null
        }
      ]
    }
  }
}